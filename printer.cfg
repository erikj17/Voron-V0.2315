# This file contains common pin mappings for the BIGTREETECH SKR Pico V1.0
# To use this config, the firmware should be compiled for the RP2040 with
# UART communication.

# The "make flash" command does not work on the SKR Pico V1.0. Instead,
# after running "make", copy the generated "out/klipper.uf2" file
# to the mass storage device in RP2040 boot mode

[include mainsail.cfg]
[include macros_sensorless_home.cfg]
[include macros_generic.cfg]
[include macros_neopixel.cfg]
#[include adxl_pico.cfg]    # Only enable for ADXL Input Shaper using pi pico


#####################################################################
#   Printer Definition - CoreXY Kinematics
#####################################################################

[mcu]
## Obtain serial port definition by "ls /dev/serial/by-id/*"
#serial: /dev/serial/by-id/usb-Klipper_rp2040_4550357128916058-if00          # USB Connection
serial: /dev/ttyAMA0                                                         # UART Connection
restart_method: command

[printer]
kinematics: corexy
max_velocity: 200
max_accel: 16000
max_z_velocity: 15
max_z_accel: 45
square_corner_velocity: 6.0

#####################################################################
#   X/Y Stepper Settings
#####################################################################

##  X/Y Stepper Motor Specs:
##  Model: NEMA14 LDO-35STH52-1504AH(VRN)
##  Step Angle: 1.8Deg
##  Current: 1.5A (1.06A RMS)
##
##  rotation_distance = <full_steps_per_rotation> * <microsteps> / <microsteps_per_mm> = 200 * 32 / 160 = 40   <--- Use this if e-step/microsteps_per_mm is known
##                    = <belt_pitch> * <number_of_teeth_on_pulley> = 2 * 20 = 40                              <--- Use this if belt/pulley information is known
##    where:
##      full_steps_per_rotation = 360Deg / Step Angle =  360 / 1.8 = 200
##      microsteps = 32. for TMC2209, choices are 8, 16, 32, or 64. Therefore, full_steps_per_rotation * <this value> = <microsteps_per_revolution>
##      microsteps_per_mm = (<full_steps_per_rotation> * <microsteps>) / (<belt_pitch> * <number_of_teeth_on_pulley>) = (200 * 32) / (2 * 20) = 160
##      <belt_pitch> = GT2 Belt, thus 2mm
##      <number_of_teeth_on_pulley> = 20t
##  <mm_per_microstep> = rotation_distance / <microsteps_per_revolution> = 40 / (200 * 32) = 0.00625mm ---> This is the minimum distance (mm) each stepper driver, 
##                                                                                                          configured as defined above, can command

##  Rear Left (B)
[stepper_x]
step_pin: gpio11
dir_pin: gpio10
enable_pin: !gpio12
full_steps_per_rotation: 200                                        # 360Deg / <step angle>
microsteps: 32                                                      # for TMC2209, choices are 8, 16, 32, or 64
rotation_distance: 40                                               # <belt_pitch> * <number_of_teeth_on_pulley>
#endstop_pin: ^gpio4                                                # If using an endstop switch, specify pin
endstop_pin: tmc2209_stepper_x:virtual_endstop                      # If using sensorless homing, specify virtual endstop
position_endstop: 122
position_max: 122
homing_speed: 20                                                    # Klipper recommended homing for sensorless is rotation_distance / 2
homing_retract_dist: 0                                              # Must be set to zero for sensorless homing.
homing_positive_dir: true

##  Rear Right (A)
[stepper_y]
step_pin: gpio6
dir_pin: gpio5
enable_pin: !gpio7
full_steps_per_rotation: 200                                        # 360Deg / <step angle>
microsteps: 32                                                      # for TMC2209, choices are 8, 16, 32, or 64
rotation_distance: 40                                               # <belt_pitch> * <number_of_teeth_on_pulley>
#endstop_pin: ^gpio3                                                # If using an endstop switch, specify pin
endstop_pin: tmc2209_stepper_y:virtual_endstop                      # If using sensorless homing, specify virtual endstop
position_endstop: 120
position_max: 120
homing_speed: 20                                                    # Klipper recommended homing for sensorless is rotation_distance / 2
homing_retract_dist: 0                                              # Must be set to zero for sensorless homing.
homing_positive_dir: true

##========================== X/Y Stepper Driver UART configuration ========================
##  Rear Left (B)
[tmc2209 stepper_x]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 0
interpolate: False
run_current: 0.5                                                    # Value is Amps RMS. 1.06A RMS max.
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthChop on, and 0 to use spreadCycle
diag_pin: ^gpio4    												 # If using virtual endstop, specify pin 
driver_SGTHRS: 60                                                   # If using virtual endstop. 255 = maximum sensitivity, 0 = minimum sensitivity. Observed minimum_sensitivity=44, maximum_sensitivity=66 

##  Rear Right (A)
[tmc2209 stepper_y]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 2
interpolate: False
run_current: 0.5                                                    # Value is Amps RMS. 1.06A RMS max.
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthChop on, and 0 to use spreadCycle
diag_pin: ^gpio3    												 # If using virtual endstop, specify pin 
driver_SGTHRS: 60                                                   # If using virtual endstop. 255 = maximum sensitivity, 0 = minimum sensitivity. Observed minimum_sensitivity=46, maximum_sensitivity=66 


#####################################################################
#   Z Stepper Settings
#####################################################################

##  Z Stepper Motor Specs:
##  Model: NEMA17 LDO-42STH25-1004CL200ET(VRN), TR8x8 integrated lead screw
##  Step Angle: 1.8Deg
##  Current: 1.0A (0.707A RMS)

[stepper_z]
step_pin: gpio19
dir_pin: !gpio28
enable_pin: !gpio2
microsteps: 32                                                      # for TMC2209, choices are 8, 16, 32, or 64
rotation_distance: 8                                                # <screw_pitch> * <number_of_separate_threads> = 2 * 4
endstop_pin: ^gpio25
position_endstop: 118.7
position_max: 118.7
position_min: -1.5
homing_speed: 20
homing_retract_dist: 3.0
second_homing_speed: 3.0

##========================== Z Stepper Driver UART configuration ========================
[tmc2209 stepper_z]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 1
interpolate: False
run_current: 0.37                                                   # Value is Amps RMS. 0.707A RMS max.
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthChop on, and 0 to use spreadCycle


#####################################################################
#   Extruder
#####################################################################

##  Extruder Stepper Motor Specs:
##  Model: NEMA14 LDO-36STH20-1004AHG(VRN)
##  Step Angle: 1.8Deg
##  Current: 1.5A (1.06A RMS)
##
##  rotation_distance = <full_steps_per_rotation> * <microsteps> / <steps_per_mm> = 200 * 32 / 1124 = 5.694
##  From Bondtech website:
##     - Stepper motor is a 1.8Deg motor hence 360/1.8 = 200 as <full_steps_per_rotation>
##     - Microsteps are set to 32
##     - E-steps value recommended for the LGX Lite is 1124 using 32 microsteps (562 for 16 microsteps)
##     - Max current is 1.0A. Recommended stepper motor current = 0.45 to 0.60A RMS.
##
##  Fine-tune rotation_distance when performing extruder calibration as described:
##  1) Make sure the extruder has filament in it, the hotend is heated to an appropriate temperature, and the printer is ready to extrude.
##  2) Use a marker to place a mark on the filament around 120mm from the intake of the extruder body. 
##     Then use a digital calipers to measure the actual distance of that mark as precisely as one can. Note this as <initial_mark_distance>.
##  3) Extrude 100mm of filament with the following command sequence: G91 followed by G1 E100 F60. 
##     Note 100mm as <requested_extrude_distance>. Wait for the extruder to finish the move (it will take about 100 seconds). 
##     It is important to use the slow extrusion rate for this test as a faster rate can cause high pressure in the extruder which will skew the results. 
##     (Do not use the "extrude button" on graphical front-ends for this test as they extrude at a fast rate.)
##  4) Use the digital calipers to measure the new distance between the extruder body and the mark on the filament. 
##     Note this as <subsequent_mark_distance>. Then calculate: actual_extrude_distance = <initial_mark_distance> - <subsequent_mark_distance>
##  5) Calculate rotation_distance as: rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / <requested_extrude_distance> Round the new rotation_distance to three decimal places.

[extruder]
step_pin: gpio14
dir_pin: gpio13                                                     # Add ! if moving opposite direction
enable_pin: !gpio15
full_steps_per_rotation: 200                                        # 360Deg / <step angle>
microsteps: 32
rotation_distance: 5.580
nozzle_diameter: 0.400
filament_diameter: 1.750
max_extrude_only_distance: 150
pressure_advance: 0.050
pressure_advance_smooth_time: 0.040

##========================== E0 Heater configuration ========================
heater_pin: gpio23
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
sensor_type: Generic 3950
sensor_pin: gpio27
min_temp: 0
max_temp: 270
min_extrude_temp: 170
max_extrude_cross_section: 0.8
#control: pid
#pid_Kp: 28.182
#pid_Ki: 1.978
#pid_Kd: 100.397

##========================== E0 Stepper Driver UART configuration ========================

[tmc2209 extruder]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 3
interpolate: False
##  Amps RMS - Motor peak current * 0.707 * 0.80 (80% for 20% safety margin) = 1.0 * 0.707 * 0.80 = 0.5656. This is in the range of the above BMG recommended current.
run_current: 0.5656                                                 # Value is Amps RMS. 0.707A RMS max.
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 999999 to turn stealthChop on, and 0 to use spreadCycle


#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
heater_pin: gpio21
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: Generic 3950
sensor_pin: gpio26
#max_power: 0.6                                                     # Max power = 60W. For 60W pads, this is not necessary. For 100W pads, constrain max power to 60W.
smooth_time: 3.0
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 68.453
#pid_ki: 2.749
#pid_kd: 426.122


#####################################################################
#   Probe
#####################################################################


#######################################################################
# Bed Mesh
#######################################################################


#####################################################################
# Fan Control
#####################################################################

[heater_fan hotend_fan]
pin: gpio18
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 50.0
#fan_speed: 1.0                                                     # You can't PWM the delta fan unless using blue wire

[fan]
##  Print Cooling Fan
pin: gpio17
max_power: 1.0
kick_start_time: 0.5                                                # Depending on your fan, you may need to increase this value if your fan will not start
off_below: 0.13
cycle_time: 0.010

#[controller_fan EBay_Fan]
#pin: gpio20
#max_power: 1.0
#kick_start_time: 0.5
#heater: extruder
#fan_speed: 1.0 

#####################################################################
# Homing and Gantry Adjustment Routines
#####################################################################

[homing_override]
axes: xyz
gcode:
    {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}

    {% if home_all or 'Z' in params %}
      G28 Z
      G1 Z60 F1200
    {% endif %}

    {% if home_all or 'X' in params %}
      _HOME_X
    {% endif %}

    {% if home_all or 'Y' in params %}
      _HOME_Y
    {% endif %}

#[safe_z_home]
#home_xy_position: 120,120 										# these coordinates must NOT be greater than the values specified in "position_max:" for the X and Y steppers
#speed: 50.0
#z_hop: 5

## To be used with BED_SCREWS_ADJUST
[bed_screws]
screw1: 61,5
screw1_name: front screw
screw2: 7,115
screw2_name: back left
screw3: 115,115
screw3_name: back right

#####################################################################
#   Thermals
#####################################################################

[temperature_sensor skr_pico]
sensor_type: temperature_mcu
max_temp: 100

[temperature_sensor raspberry_pi]
##  Host (speederpad/raspi) Temp
sensor_type: temperature_host
max_temp: 100

#####################################################################
#   V0 Display
#####################################################################
[mcu display]
serial: /dev/serial/by-id/usb-Klipper_stm32f042x6_150001000643303756353720-if00
restart_method: command

[display]
lcd_type: sh1106
i2c_mcu: display
i2c_bus: i2c1a
# # Set the direction of the encoder wheel
# #   Standard: Right (clockwise) scrolls down or increases values. Left (counter-clockwise scrolls up or decreases values.
encoder_pins: ^display:PA3, ^display:PA4
# #   Reversed: Right (clockwise) scrolls up or decreases values. Left (counter-clockwise scrolls down or increases values.
# #encoder_pins: ^display:PA4, ^display:PA3
click_pin: ^!display:PA1
kill_pin: ^!display:PA5
x_offset: 2
# #   Use X offset to shift the display towards the right. Value can be 0 to 3
vcomh: 31
# #   Set the Vcomh value on SSD1306/SH1106 displays. This value is
# #   associated with a "smearing" effect on some OLED displays. The
# #   value may range from 0 to 63. Default is 0.
# #   Adjust this value if you get some vertical stripes on your display. (31 seems to be a good value)

[neopixel displayStatus]
pin: display:PA0
chain_count: 1
color_order: GRB
initial_RED: 0.0
initial_GREEN: 0.0196
initial_BLUE: 0.0118

#####################################################################
# Neopixel
#####################################################################

[neopixel board_rgb]
pin: gpio24
chain_count: 17
color_order: GRB
initial_RED: 0.1
initial_GREEN: 0.0
initial_BLUE: 0.0

[output_pin toolhead_led]
pin: gpio20
value: 0

#######################################################################
# End-stop style filament sensor
#######################################################################


#######################################################################
# Klipper Extras
#######################################################################

[idle_timeout]
gcode:
    M84                         ; Turn off motors
    TURN_OFF_HEATERS 
timeout: 3600                   ; Idle time (in seconds) to wait before running the above G-Code commands. The default is 600 seconds.


[input_shaper]
shaper_freq_x: 76.4
shaper_type_x: zv
shaper_freq_y: 81.8
shaper_type_y: zv

[virtual_sdcard]
path: /home/pi/printer_data/gcodes

[pause_resume]

##  Enable the "M118" and "RESPOND" extended commands
[respond]
#default_type: echo
#   Sets the default prefix of the "M118" and "RESPOND" output to one
#   of the following:
#       echo: "echo: " (This is the default)
#       command: "// "
#       error: "!! "
#default_prefix: echo:
#   Directly sets the default prefix. If present, this value will
#   override the "default_type".
# examples:
#   RESPOND PREFIX=<prefix> MSG="<message>"
#   RESPOND TYPE=error MSG="<message>"


#####################################################################
# Macros
#####################################################################

#[gcode_macro HOME]
#gcode:
#    G90
#    # Home Z
#    G28 Z120
#    G1 Z110 F1200
#    # Home Y
#    G28 Y120
#    G1 Y115 F1200
#    # Home X
#    G4 P2000
#    G28 X120
#    G1 X115 F1200

[gcode_macro TOOLHEAD_LIGHT]
gcode:
    # Parameters
    {% set toolhead_override_on = params.TOOLHEAD_ON|default(0)|int %}

    {% if (printer['output_pin toolhead_led'].value == 1) and (toolhead_override_on == 0)%}
        SET_PIN PIN=toolhead_led VALUE=0
    {% else %}
        SET_PIN PIN=toolhead_led VALUE=1
    {% endif %}

[gcode_macro LAZY_HOME]
gcode:
    {% if printer.toolhead.homed_axes != "xyz" %}
      G28
    {% endif %}

[gcode_macro PREHEAT]
gcode:
    # Parameters
    {% set bedtemp = params.BED|default(110)|int %}

    TOOLHEAD_LIGHT TOOLHEAD_ON=1

    LAZY_HOME              ; home axis if necessary
    ## Move hotend a sufficent distance from heated bed for heat soak
    G90                         ; absolute positioning
    G0 X60 Y60 Z50 F3600
    M106 S255            ; set parts fan to full speed, helps circulate chamber air
    M190 S{bedtemp}      ; set & wait for bed temp
    #SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=110 #For ABS
    RESPOND PREFIX=PREHEAT: MSG="Bed at Temp"

[gcode_macro PRINT_START]
#   Use PRINT_START for the slicer starting script - please customize for your slicer of choice
gcode:
    # Parameters
    {% set bedtemp = params.BED|int %}
    {% set hotendtemp = params.HOTEND|int %}
    {% set chambertemp = params.CHAMBER|default(0)|int %}

    TOOLHEAD_LIGHT TOOLHEAD_ON=1
#    BED_MESH_CLEAR

    M117 Heating Bed
    M190 S{bedtemp}             ; set & wait for bed temp

    M117 Preheating Nozzle
    M109 S150                   ; Wait for nozzle to heat to 150C - soften filament, but no oozing.
    M107                        ; turn off parts fan
    LAZY_HOME                   ; home axis if necessary

    # Move to print-start position and heat up nozzle.
    G90                         ; absolute positioning
    G0 X3 Y3 Z0.3 F9000         ; place toolhead front left to heat up nozzle
    G92 E0                      ; Set Extruder position to 0
    M117 Heating Nozzle
    M109 S{hotendtemp}          ; set & wait for hotend temp

    G90                         ; absolute positioning
    M83                         ; relative extruder mode
    G92 E0                      ; Set Extruder position to 0

    M117 Printing Started
   
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
    M400                           ; wait for buffer to clear
    G92 E0                         ; zero the extruder
    G1 E-5.0 F1800                 ; retract filament
    G91                            ; relative positioning

    #   Get Boundaries
    {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
    {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
    {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

    #   Check end position to determine safe direction to move
    {% if printer.toolhead.position.x < (max_x - 20) %}
        {% set x_safe = 20.0 %}
    {% else %}
        {% set x_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.y < (max_y - 20) %}
        {% set y_safe = 20.0 %}
    {% else %}
        {% set y_safe = -20.0 %}
    {% endif %}

    {% if printer.toolhead.position.z < (max_z - 2) %}
        {% set z_safe = 2.0 %}
    {% else %}
        {% set z_safe = max_z - printer.toolhead.position.z %}
    {% endif %}

    G0 Z{z_safe} F3600             ; move nozzle up
    G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
    TURN_OFF_HEATERS
    M107                           ; turn off fan
    G90                            ; absolute positioning
    G0 X60 Y{max_y} F3600          ; park nozzle at rear
  
[gcode_macro FILAMENT_LOAD]
gcode:
    # Parameters
    {% set HOTEND_TEMP = params.HOTEND|default(245)|int %}

    LAZY_HOME                      ; home axis if necessary
    G90                            ; absolute coordinates
    G0 X60 Y25 Z70                 ; move to servicing position
    RESPOND MSG="Preheating Nozzle"
    M109 S{HOTEND_TEMP}            ; wait for nozzle to reach temp
    M83                            ; Relative extruder mode.
    G92 E0                         ; initialize extruder value to 0
    RESPOND MSG="Loading Filament"
    G1 E30 F300                    ; load
    G4 P6000                       ; dwell 60000ms (30mm @ 300mm/60sec = 6seconds)
    G1 E15 F150                    ; prime nozzle with filament
    G4 P8000                       ; dwell 8000ms (15mm @ 150mm/60sec = 6seconds + 2 seconds for settling)
    M82                            ; absolute extruder
    G92 E0                         ; initialize extruder value to 0
    RESPOND MSG="Load Complete!"
    
[gcode_macro FILAMENT_UNLOAD]
gcode:
    # Parameters
    {% set HOTEND_TEMP = params.HOTEND|default(245)|int %}

    LAZY_HOME                      ; home axis if necessary
    G90                            ; absolute coordinates
    G0 X60 Y25 Z70                 ; move to servicing position
    RESPOND MSG="Preheating Nozzle"
    M109 S{HOTEND_TEMP}            ; wait for nozzle to reach temp
    M83                            ; Relative extruder mode.
    G92 E0                         ; initialize extruder value to 0
    RESPOND MSG="Unloading Filament"
    G1 E10 F300                    ; extrude a little to soften tip
    G4 P4000                       ; dwell 4000ms (10mm @ 300mm/60sec = 2seconds + 2 seconds for settling)
    G1 E-10 F3000                  ; jerk the filament out of the melt zone
    G1 E-100 F1800                 ; retract the length from melt zone to extruder (~110mm)
    G4 P6000                       ; dwell 6000ms (100mm @ 1800mm/60sec = 3.3seconds + 3seconds for settling)
    M82                            ; absolute extruder
    G92 E0                         ; initialize extruder value to 0
    RESPOND MSG="Unload Complete!"

[gcode_macro ZUP]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=0.01 MOVE=1

[gcode_macro ZDOWN]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=-0.01 MOVE=1

[gcode_macro SCREW_ADJUST]
gcode:
    # Parameters
    {% set SCREW_NUM = params.SCREW|default(0)|int %}

    LAZY_HOME                      ; home axis if necessary
    G90                            ; absolute coordinates
    G0 Z5 F3600                    ; set Z position to 5mm to avoid scratching bed prior to moves

    {% if (SCREW_NUM > 0) and (SCREW_NUM < 4) %}
        LAZY_HOME                      ; home axis if necessary
        G90                            ; absolute coordinates
        G0 Z5 F3600                    ; set Z position to 5mm to avoid scratching bed prior to moves
        {% if SCREW_NUM == 1 %}
            G0 X61 Y5 F3600            ; move nozzle to above front screw
        {% else %}
            {% if (SCREW_NUM == 2) %}
                G0 X7 Y115 F3600       ; move nozzle to above rear left screw
            {% else %}
                G0 X115 Y115 F3600     ; move nozzle to above rear right screw
            {% endif %}
        {% endif %}
        G0 Z0.1                        ; set Z position to 0.1mm for paper test 
    {% else %}
        RESPOND MSG="Bad Entry. 1=Front, 2=Rear Left, 3=Rear Right"
    {% endif %}

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 61.524
#*# pid_ki = 2.413
#*# pid_kd = 392.216
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 29.965
#*# pid_ki = 1.800
#*# pid_kd = 124.728
